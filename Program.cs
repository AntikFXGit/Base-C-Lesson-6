using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Base_C_Lesson_6
{
    
    class Program
    {
        static void Main(string[] args)
        {
            // Задание 1.
            //Task1();

            // Задание 2.
            Task2();

            // Задание 3. (не будет выполнятся т.к. нет файла с данными: students_1.csv, есть только описание структуры, по этому идем "по приборам" и без теста.)
            //Task3();


            Console.ReadKey();
        }



        /*
        * Задание 1.
        * Изменить программу вывода функции так, чтобы можно было передавать функции типа double (double,double). Продемонстрировать работу на функции с функцией a*x^2 и функцией a*sin(x). 
        */
        static void Task1()
        {
            Console.Write("\n------------------------------------------------------\n");
            string description = "Задание 1\n";
            description += "Изменить программу вывода функции так, чтобы можно было передавать функции типа double (double,double). Продемонстрировать работу на функции с функцией a*x^2 и функцией a*sin(x).\n";
            Console.Write(description);
            Console.Write("------------------------------------------------------\n");

            var del = new MyDelegate();

            Console.WriteLine("Функция: a*x^2");
            del.Table(del.MyFunc, -2, 2);

            Console.WriteLine("Функция: a*sin(x)");
            del.Table(del.MyFunc2, -2, 2);
            Console.ReadKey();
        }


        /*
        * Задание 2.
        Модифицировать программу нахождения минимума функции так, чтобы можно было передавать функцию в виде делегата.

        а) Сделайте меню с различными функциями и предоставьте пользователю выбор, для какой функции и на каком отрезке находить минимум.
        б) Используйте массив (или список) делегатов, в котором хранятся различные функции.
        в) *Переделайте функцию Load, чтобы она возвращала массив считанных значений. Пусть она возвращает минимум через параметр.        
        */
        static void Task2()
        {
            Console.Write("\n------------------------------------------------------\n");
            string description = "Задание 2\n";
            description += "Модифицировать программу нахождения минимума функции так, чтобы можно было передавать функцию в виде делегата.\n";
            description += "а) Сделайте меню с различными функциями и предоставьте пользователю выбор, для какой функции и на каком отрезке находить минимум.\n";
            description += "б) Используйте массив (или список) делегатов, в котором хранятся различные функции.\n";
            description += "в) *Переделайте функцию Load, чтобы она возвращала массив считанных значений. Пусть она возвращает минимум через параметр.\n";
            Console.Write(description);
            Console.Write("------------------------------------------------------\n");

            var f = new MyFunc();
            
            // а) Передача делегата
            f.SaveData(f.FuncCalc, "data.bin", -100, 100, 0.5);
            Console.WriteLine("Минимальное значение (передача делегата): "+f.LoadData("data.bin"));

            // б) Запрос доступных функций + консольное меню
            var functions = f.getFunctions();
            
            // Вопрос 1
            Console.WriteLine("Выберите функцию для расчета:");
            int i = 0;
            foreach (var mf in functions)
            {
                Console.WriteLine("["+i+"] "+mf.Method.Name);
                i++;
            }
            int fId = f.getAnswer("[0,1,2]{1}");
            
            // Вопрос 2
            // Запрашиваем отрезок
            Console.WriteLine("Укажите начала диапазона:");
            int numStart = f.getAnswer("[0-9]{1,}");
            
            // Вопрос 3
            // Запрашиваем отрезок
            Console.WriteLine("Укажите окончание диапазона:");
            int numStop = f.getAnswer("[0-9]{1,}");

            // Результат расчета функции, поиск минимума:
            Console.WriteLine("Результат расчета функции (пользовательский выбор функции) - "+ numStart + " / " + numStop + ":");
            f.SaveData(functions[fId], "data.bin", numStart, numStop, 0.5);
            Console.WriteLine(f.LoadData("data.bin"));
            
            // в) *Переделайте функцию Load, чтобы она возвращала массив считанных значений. Пусть она возвращает минимум через параметр.
            f.SaveData(f.FuncCalc, "data.bin", -100, 100, 0.5);
            var resultCalc = new List<double>();
            double minValue = 0;
            f.LoadData2("data.bin", ref resultCalc, out minValue);
            Console.WriteLine("Минимальное значение (возврат минимума через out): " + minValue);

            Console.ReadKey();
        }


        /*
        Задание 3.
        Переделать программу «Пример использования коллекций» для решения следующих задач 
        а) Подсчитать количество студентов учащихся на 5 и 6 курсах;
        б) подсчитать сколько студентов в возрасте от 18 до 20 лет на каком курсе учатся (частотный массив);
        в) отсортировать список по возрасту студента;
        г) *отсортировать список по курсу и возрасту студента;
        д) разработать единый метод подсчета количества студентов по различным параметрам выбора с помощью делегата и методов предикатов.        
        */
        static void Task3()
        {
            Console.Write("\n------------------------------------------------------\n");
            string description = "Задание 3\n";
            description += " Переделать программу «Пример использования коллекций» для решения следующих задач\n";
            description += " а) Подсчитать количество студентов учащихся на 5 и 6 курсах;\n";
            description += " б) подсчитать сколько студентов в возрасте от 18 до 20 лет на каком курсе учатся (частотный массив);\n";
            description += " в) отсортировать список по возрасту студента;\n";
            description += " г) *отсортировать список по курсу и возрасту студента;\n";
            description += " д) разработать единый метод подсчета количества студентов по различным параметрам выбора с помощью делегата и методов предикатов.\n";
            Console.Write(description);
            Console.Write("------------------------------------------------------\n");

            // Файла students_1.csv, который требуется в данном задании - нет. Есть только описание структуры, по этому идем "по приборам" и без теста.
            var c = new MyCollection();
            var users = c.GetUsers();

            //  а) Подсчитать количество студентов учащихся на 5 и 6 курсах;
            var selectedUsers = users.Where(u => u.сourse == 5 || u.сourse == 6).Count();

            // б) подсчитать сколько студентов в возрасте от 18 до 20 лет на каком курсе учатся (частотный массив);
            var selectedUsers2 = users.Where(u => u.age >= 18 && u.age <= 20).GroupBy(p => p.сourse).Select(g => new { Name = g.Key, Count = g.Count() });

            // в) отсортировать список по возрасту студента
            var selectedUsers3 = users.OrderBy(u => u.age); // ASC

            // г) *отсортировать список по курсу и возрасту студента
            var selectedUsers4 = users.OrderBy(u => u.сourse).ThenBy(u => u.age); // ASC

            // д) разработать единый метод подсчета количества студентов по различным параметрам выбора с помощью делегата и методов предикатов.
            // Используем метод CountAge для подсчета количества студентов по возрасту, метод пробрасываем через делегат. Параметры передаем в массиве, метод CountAge (предикат) обработает массив, получит значения и произведет фильтрацию.
            var cntUsers = c.MyCount(c.CountAge, new int[] { 18, 20 });


            Console.ReadKey();
        }


    }
}
